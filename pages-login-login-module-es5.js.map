{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.module.ts"],"names":["listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","element","info","get","subject","asObservable","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","propDecorators","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_document","_textareaElement","nativeElement","_measuringClass","FIREFOX","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","resizeToFitContent","window","_getWindow","pipe","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","value","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","undefined","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","host","TextFieldModule","ɵmod","ɵinj","TextFieldModule_Factory","imports","ngJitMode","declarations","exports","MatDivider","_vertical","_inset","MatDivider_Factory","ɵcmp","hostVars","MatDivider_HostBindings","vertical","inset","decls","vars","template","MatDivider_Template","styles","encapsulation","changeDetection","None","OnPush","MatDividerModule","MatDividerModule_Factory","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","valueChanges","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_processHints","_errorChildren","change","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","find","push","map","error","setDescribedByIds","labelEl","children","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","Math","abs","rect","right","left","getRootNode","rootNode","documentElement","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","_t","first","viewQuery","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","features","provide","useExisting","ngContentSelectors","consts","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","data","animation","String","descendants","animations","providers","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","filter","has","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","multiple","updateErrorState","_dirtyCheckNativeValue","options","focus","isFocused","readonly","newValue","indexOf","validity","badInput","_ariaDescribedby","join","_id","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","toString","errorStateMatcher","MatInputModule","MatInputModule_Factory","routes","path","component","LoginRoutingModule","forChild","LoginComponent","formBuilder","loginFormGroup","group","email","minLength","password","onSubmit","templateUrl","styleUrls","LoginModule"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nlet AutofillMonitor = /** @class */ (() => {\n    class AutofillMonitor {\n        constructor(_platform, _ngZone) {\n            this._platform = _platform;\n            this._ngZone = _ngZone;\n            this._monitoredElements = new Map();\n        }\n        monitor(elementOrRef) {\n            if (!this._platform.isBrowser) {\n                return EMPTY;\n            }\n            const element = coerceElement(elementOrRef);\n            const info = this._monitoredElements.get(element);\n            if (info) {\n                return info.subject.asObservable();\n            }\n            const result = new Subject();\n            const cssClass = 'cdk-text-field-autofilled';\n            const listener = ((event) => {\n                // Animation events fire on initial element render, we check for the presence of the autofill\n                // CSS class to make sure this is a real change in state, not just the initial render before\n                // we fire off events.\n                if (event.animationName === 'cdk-text-field-autofill-start' &&\n                    !element.classList.contains(cssClass)) {\n                    element.classList.add(cssClass);\n                    this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n                }\n                else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                    element.classList.contains(cssClass)) {\n                    element.classList.remove(cssClass);\n                    this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n                }\n            });\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('animationstart', listener, listenerOptions);\n                element.classList.add('cdk-text-field-autofill-monitored');\n            });\n            this._monitoredElements.set(element, {\n                subject: result,\n                unlisten: () => {\n                    element.removeEventListener('animationstart', listener, listenerOptions);\n                }\n            });\n            return result.asObservable();\n        }\n        stopMonitoring(elementOrRef) {\n            const element = coerceElement(elementOrRef);\n            const info = this._monitoredElements.get(element);\n            if (info) {\n                info.unlisten();\n                info.subject.complete();\n                element.classList.remove('cdk-text-field-autofill-monitored');\n                element.classList.remove('cdk-text-field-autofilled');\n                this._monitoredElements.delete(element);\n            }\n        }\n        ngOnDestroy() {\n            this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n        }\n    }\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n    AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n    AutofillMonitor.ctorParameters = () => [\n        { type: Platform },\n        { type: NgZone }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n    return AutofillMonitor;\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nlet CdkAutofill = /** @class */ (() => {\n    class CdkAutofill {\n        constructor(_elementRef, _autofillMonitor) {\n            this._elementRef = _elementRef;\n            this._autofillMonitor = _autofillMonitor;\n            /** Emits when the autofill state of the element changes. */\n            this.cdkAutofill = new EventEmitter();\n        }\n        ngOnInit() {\n            this._autofillMonitor\n                .monitor(this._elementRef)\n                .subscribe(event => this.cdkAutofill.emit(event));\n        }\n        ngOnDestroy() {\n            this._autofillMonitor.stopMonitoring(this._elementRef);\n        }\n    }\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n    CdkAutofill.ctorParameters = () => [\n        { type: ElementRef },\n        { type: AutofillMonitor }\n    ];\n    CdkAutofill.propDecorators = {\n        cdkAutofill: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n    return CdkAutofill;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nlet CdkTextareaAutosize = /** @class */ (() => {\n    class CdkTextareaAutosize {\n        constructor(_elementRef, _platform, _ngZone, \n        /** @breaking-change 11.0.0 make document required */\n        document) {\n            this._elementRef = _elementRef;\n            this._platform = _platform;\n            this._ngZone = _ngZone;\n            this._destroyed = new Subject();\n            this._enabled = true;\n            /**\n             * Value of minRows as of last resize. If the minRows has decreased, the\n             * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n             * does not have the same problem because it does not affect the textarea's scrollHeight.\n             */\n            this._previousMinRows = -1;\n            this._document = document;\n            this._textareaElement = this._elementRef.nativeElement;\n            this._measuringClass = _platform.FIREFOX ?\n                'cdk-textarea-autosize-measuring-firefox' :\n                'cdk-textarea-autosize-measuring';\n        }\n        /** Minimum amount of rows in the textarea. */\n        get minRows() { return this._minRows; }\n        set minRows(value) {\n            this._minRows = coerceNumberProperty(value);\n            this._setMinHeight();\n        }\n        /** Maximum amount of rows in the textarea. */\n        get maxRows() { return this._maxRows; }\n        set maxRows(value) {\n            this._maxRows = coerceNumberProperty(value);\n            this._setMaxHeight();\n        }\n        /** Whether autosizing is enabled or not */\n        get enabled() { return this._enabled; }\n        set enabled(value) {\n            value = coerceBooleanProperty(value);\n            // Only act if the actual value changed. This specifically helps to not run\n            // resizeToFitContent too early (i.e. before ngAfterViewInit)\n            if (this._enabled !== value) {\n                (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n            }\n        }\n        /** Sets the minimum height of the textarea as determined by minRows. */\n        _setMinHeight() {\n            const minHeight = this.minRows && this._cachedLineHeight ?\n                `${this.minRows * this._cachedLineHeight}px` : null;\n            if (minHeight) {\n                this._textareaElement.style.minHeight = minHeight;\n            }\n        }\n        /** Sets the maximum height of the textarea as determined by maxRows. */\n        _setMaxHeight() {\n            const maxHeight = this.maxRows && this._cachedLineHeight ?\n                `${this.maxRows * this._cachedLineHeight}px` : null;\n            if (maxHeight) {\n                this._textareaElement.style.maxHeight = maxHeight;\n            }\n        }\n        ngAfterViewInit() {\n            if (this._platform.isBrowser) {\n                // Remember the height which we started with in case autosizing is disabled\n                this._initialHeight = this._textareaElement.style.height;\n                this.resizeToFitContent();\n                this._ngZone.runOutsideAngular(() => {\n                    const window = this._getWindow();\n                    fromEvent(window, 'resize')\n                        .pipe(auditTime(16), takeUntil(this._destroyed))\n                        .subscribe(() => this.resizeToFitContent(true));\n                });\n            }\n        }\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /**\n         * Cache the height of a single-row textarea if it has not already been cached.\n         *\n         * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n         * maxRows. For the initial version, we will assume that the height of a single line in the\n         * textarea does not ever change.\n         */\n        _cacheTextareaLineHeight() {\n            if (this._cachedLineHeight) {\n                return;\n            }\n            // Use a clone element because we have to override some styles.\n            let textareaClone = this._textareaElement.cloneNode(false);\n            textareaClone.rows = 1;\n            // Use `position: absolute` so that this doesn't cause a browser layout and use\n            // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n            // would affect the height.\n            textareaClone.style.position = 'absolute';\n            textareaClone.style.visibility = 'hidden';\n            textareaClone.style.border = 'none';\n            textareaClone.style.padding = '0';\n            textareaClone.style.height = '';\n            textareaClone.style.minHeight = '';\n            textareaClone.style.maxHeight = '';\n            // In Firefox it happens that textarea elements are always bigger than the specified amount\n            // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n            // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n            // to hidden. This ensures that there is no invalid calculation of the line height.\n            // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n            textareaClone.style.overflow = 'hidden';\n            this._textareaElement.parentNode.appendChild(textareaClone);\n            this._cachedLineHeight = textareaClone.clientHeight;\n            this._textareaElement.parentNode.removeChild(textareaClone);\n            // Min and max heights have to be re-calculated if the cached line height changes\n            this._setMinHeight();\n            this._setMaxHeight();\n        }\n        ngDoCheck() {\n            if (this._platform.isBrowser) {\n                this.resizeToFitContent();\n            }\n        }\n        /**\n         * Resize the textarea to fit its content.\n         * @param force Whether to force a height recalculation. By default the height will be\n         *    recalculated only if the value changed since the last call.\n         */\n        resizeToFitContent(force = false) {\n            // If autosizing is disabled, just skip everything else\n            if (!this._enabled) {\n                return;\n            }\n            this._cacheTextareaLineHeight();\n            // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n            // in checking the height of the textarea.\n            if (!this._cachedLineHeight) {\n                return;\n            }\n            const textarea = this._elementRef.nativeElement;\n            const value = textarea.value;\n            // Only resize if the value or minRows have changed since these calculations can be expensive.\n            if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n                return;\n            }\n            const placeholderText = textarea.placeholder;\n            // Reset the textarea height to auto in order to shrink back to its default size.\n            // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n            // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n            // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n            // need to be removed temporarily.\n            textarea.classList.add(this._measuringClass);\n            textarea.placeholder = '';\n            // The measuring class includes a 2px padding to workaround an issue with Chrome,\n            // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n            const height = textarea.scrollHeight - 4;\n            // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n            textarea.style.height = `${height}px`;\n            textarea.classList.remove(this._measuringClass);\n            textarea.placeholder = placeholderText;\n            this._ngZone.runOutsideAngular(() => {\n                if (typeof requestAnimationFrame !== 'undefined') {\n                    requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n                }\n                else {\n                    setTimeout(() => this._scrollToCaretPosition(textarea));\n                }\n            });\n            this._previousValue = value;\n            this._previousMinRows = this._minRows;\n        }\n        /**\n         * Resets the textarea to its original size\n         */\n        reset() {\n            // Do not try to change the textarea, if the initialHeight has not been determined yet\n            // This might potentially remove styles when reset() is called before ngAfterViewInit\n            if (this._initialHeight !== undefined) {\n                this._textareaElement.style.height = this._initialHeight;\n            }\n        }\n        // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n        // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n        // can move this back into `host`.\n        // tslint:disable:no-host-decorator-in-concrete\n        _noopInputHandler() {\n            // no-op handler that ensures we're running change detection on input events.\n        }\n        /** Access injected document if available or fallback to global document reference */\n        _getDocument() {\n            return this._document || document;\n        }\n        /** Use defaultView of injected document if available or fallback to global window reference */\n        _getWindow() {\n            const doc = this._getDocument();\n            return doc.defaultView || window;\n        }\n        /**\n         * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n         * prevent it from scrolling to the caret position. We need to re-set the selection\n         * in order for it to scroll to the proper position.\n         */\n        _scrollToCaretPosition(textarea) {\n            const { selectionStart, selectionEnd } = textarea;\n            const document = this._getDocument();\n            // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n            // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n            // between the time we requested the animation frame and when it was executed.\n            // Also note that we have to assert that the textarea is focused before we set the\n            // selection range. Setting the selection range on a non-focused textarea will cause\n            // it to receive focus on IE and Edge.\n            if (!this._destroyed.isStopped && document.activeElement === textarea) {\n                textarea.setSelectionRange(selectionStart, selectionEnd);\n            }\n        }\n    }\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n    CdkTextareaAutosize.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Platform },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ];\n    CdkTextareaAutosize.propDecorators = {\n        minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n        maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n        enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n        _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n    return CdkTextareaAutosize;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet TextFieldModule = /** @class */ (() => {\n    class TextFieldModule {\n    }\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n    return TextFieldModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nlet MatDivider = /** @class */ (() => {\n    class MatDivider {\n        constructor() {\n            this._vertical = false;\n            this._inset = false;\n        }\n        /** Whether the divider is vertically aligned. */\n        get vertical() { return this._vertical; }\n        set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n        /** Whether the divider is an inset divider. */\n        get inset() { return this._inset; }\n        set inset(value) { this._inset = coerceBooleanProperty(value); }\n    }\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatDivider.propDecorators = {\n        vertical: [{ type: Input }],\n        inset: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n    return MatDivider;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatDividerModule = /** @class */ (() => {\n    class MatDividerModule {\n    }\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n    return MatDividerModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/** Single error message to be shown underneath the form field. */\nlet MatError = /** @class */ (() => {\n    class MatError {\n        constructor() {\n            this.id = `mat-error-${nextUniqueId++}`;\n        }\n    }\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\n    MatError.propDecorators = {\n        id: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n    return MatError;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nlet MatFormFieldControl = /** @class */ (() => {\n    class MatFormFieldControl {\n    }\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n    return MatFormFieldControl;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/** Hint text to be shown underneath the form field control. */\nlet MatHint = /** @class */ (() => {\n    class MatHint {\n        constructor() {\n            /** Whether to align the hint label at the start or end of the line. */\n            this.align = 'start';\n            /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n            this.id = `mat-hint-${nextUniqueId$1++}`;\n        }\n    }\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\n    MatHint.propDecorators = {\n        align: [{ type: Input }],\n        id: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n    return MatHint;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nlet MatLabel = /** @class */ (() => {\n    class MatLabel {\n    }\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n    return MatLabel;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nlet MatPlaceholder = /** @class */ (() => {\n    class MatPlaceholder {\n    }\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n    return MatPlaceholder;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Prefix to be placed in front of the form field. */\nlet MatPrefix = /** @class */ (() => {\n    class MatPrefix {\n    }\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n    return MatPrefix;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Suffix to be placed at the end of the form field. */\nlet MatSuffix = /** @class */ (() => {\n    class MatSuffix {\n    }\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n    return MatSuffix;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nlet MatFormField = /** @class */ (() => {\n    class MatFormField extends _MatFormFieldMixinBase {\n        constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n            super(_elementRef);\n            this._elementRef = _elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._dir = _dir;\n            this._defaults = _defaults;\n            this._platform = _platform;\n            this._ngZone = _ngZone;\n            /**\n             * Whether the outline gap needs to be calculated\n             * immediately on the next change detection run.\n             */\n            this._outlineGapCalculationNeededImmediately = false;\n            /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n            this._outlineGapCalculationNeededOnStable = false;\n            this._destroyed = new Subject();\n            /** Override for the logic that disables the label animation in certain cases. */\n            this._showAlwaysAnimate = false;\n            /** State of the mat-hint and mat-error animations. */\n            this._subscriptAnimationState = '';\n            this._hintLabel = '';\n            // Unique id for the hint label.\n            this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n            // Unique id for the internal form field label.\n            this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n            this._labelOptions = labelOptions ? labelOptions : {};\n            this.floatLabel = this._getDefaultFloatLabelState();\n            this._animationsEnabled = _animationMode !== 'NoopAnimations';\n            // Set the default through here so we invoke the setter on the first run.\n            this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n            this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n                _defaults.hideRequiredMarker : false;\n        }\n        /** The form-field appearance style. */\n        get appearance() { return this._appearance; }\n        set appearance(value) {\n            const oldValue = this._appearance;\n            this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n            if (this._appearance === 'outline' && oldValue !== value) {\n                this._outlineGapCalculationNeededOnStable = true;\n            }\n        }\n        /** Whether the required marker should be hidden. */\n        get hideRequiredMarker() { return this._hideRequiredMarker; }\n        set hideRequiredMarker(value) {\n            this._hideRequiredMarker = coerceBooleanProperty(value);\n        }\n        /** Whether the floating label should always float or not. */\n        get _shouldAlwaysFloat() {\n            return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n        }\n        /** Whether the label can float or not. */\n        get _canLabelFloat() { return this.floatLabel !== 'never'; }\n        /** Text for the form field hint. */\n        get hintLabel() { return this._hintLabel; }\n        set hintLabel(value) {\n            this._hintLabel = value;\n            this._processHints();\n        }\n        /**\n         * Whether the label should always float, never float or float as the user types.\n         *\n         * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n         * way to make the floating label emulate the behavior of a standard input placeholder. However\n         * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n         * appearances the `never` option has been disabled in favor of just using the placeholder.\n         */\n        get floatLabel() {\n            return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n        }\n        set floatLabel(value) {\n            if (value !== this._floatLabel) {\n                this._floatLabel = value || this._getDefaultFloatLabelState();\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        get _control() {\n            // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n            //  We should clean this up once Ivy is the default renderer.\n            return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n        }\n        set _control(value) {\n            this._explicitFormFieldControl = value;\n        }\n        get _labelChild() {\n            return this._labelChildNonStatic || this._labelChildStatic;\n        }\n        /**\n         * Gets an ElementRef for the element that a overlay attached to the form-field should be\n         * positioned relative to.\n         */\n        getConnectedOverlayOrigin() {\n            return this._connectionContainerRef || this._elementRef;\n        }\n        ngAfterContentInit() {\n            this._validateControlChild();\n            const control = this._control;\n            if (control.controlType) {\n                this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n            }\n            // Subscribe to changes in the child control state in order to update the form field UI.\n            control.stateChanges.pipe(startWith(null)).subscribe(() => {\n                this._validatePlaceholders();\n                this._syncDescribedByIds();\n                this._changeDetectorRef.markForCheck();\n            });\n            // Run change detection if the value changes.\n            if (control.ngControl && control.ngControl.valueChanges) {\n                control.ngControl.valueChanges\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._changeDetectorRef.markForCheck());\n            }\n            // Note that we have to run outside of the `NgZone` explicitly,\n            // in order to avoid throwing users into an infinite loop\n            // if `zone-patch-rxjs` is included.\n            this._ngZone.runOutsideAngular(() => {\n                this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n                    if (this._outlineGapCalculationNeededOnStable) {\n                        this.updateOutlineGap();\n                    }\n                });\n            });\n            // Run change detection and update the outline if the suffix or prefix changes.\n            merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._changeDetectorRef.markForCheck();\n            });\n            // Re-validate when the number of hints changes.\n            this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n                this._processHints();\n                this._changeDetectorRef.markForCheck();\n            });\n            // Update the aria-described by when the number of errors changes.\n            this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n                this._syncDescribedByIds();\n                this._changeDetectorRef.markForCheck();\n            });\n            if (this._dir) {\n                this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                    if (typeof requestAnimationFrame === 'function') {\n                        this._ngZone.runOutsideAngular(() => {\n                            requestAnimationFrame(() => this.updateOutlineGap());\n                        });\n                    }\n                    else {\n                        this.updateOutlineGap();\n                    }\n                });\n            }\n        }\n        ngAfterContentChecked() {\n            this._validateControlChild();\n            if (this._outlineGapCalculationNeededImmediately) {\n                this.updateOutlineGap();\n            }\n        }\n        ngAfterViewInit() {\n            // Avoid animations on load.\n            this._subscriptAnimationState = 'enter';\n            this._changeDetectorRef.detectChanges();\n        }\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /** Determines whether a class from the NgControl should be forwarded to the host element. */\n        _shouldForward(prop) {\n            const ngControl = this._control ? this._control.ngControl : null;\n            return ngControl && ngControl[prop];\n        }\n        _hasPlaceholder() {\n            return !!(this._control && this._control.placeholder || this._placeholderChild);\n        }\n        _hasLabel() {\n            return !!this._labelChild;\n        }\n        _shouldLabelFloat() {\n            return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n        }\n        _hideControlPlaceholder() {\n            // In the legacy appearance the placeholder is promoted to a label if no label is given.\n            return this.appearance === 'legacy' && !this._hasLabel() ||\n                this._hasLabel() && !this._shouldLabelFloat();\n        }\n        _hasFloatingLabel() {\n            // In the legacy appearance the placeholder is promoted to a label if no label is given.\n            return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n        }\n        /** Determines whether to display hints or errors. */\n        _getDisplayedMessages() {\n            return (this._errorChildren && this._errorChildren.length > 0 &&\n                this._control.errorState) ? 'error' : 'hint';\n        }\n        /** Animates the placeholder up and locks it in position. */\n        _animateAndLockLabel() {\n            if (this._hasFloatingLabel() && this._canLabelFloat) {\n                // If animations are disabled, we shouldn't go in here,\n                // because the `transitionend` will never fire.\n                if (this._animationsEnabled && this._label) {\n                    this._showAlwaysAnimate = true;\n                    fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                        this._showAlwaysAnimate = false;\n                    });\n                }\n                this.floatLabel = 'always';\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n         * or child element with the `mat-placeholder` directive).\n         */\n        _validatePlaceholders() {\n            if (this._control.placeholder && this._placeholderChild) {\n                throw getMatFormFieldPlaceholderConflictError();\n            }\n        }\n        /** Does any extra processing that is required when handling the hints. */\n        _processHints() {\n            this._validateHints();\n            this._syncDescribedByIds();\n        }\n        /**\n         * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n         * attribute being considered as `align=\"start\"`.\n         */\n        _validateHints() {\n            if (this._hintChildren) {\n                let startHint;\n                let endHint;\n                this._hintChildren.forEach((hint) => {\n                    if (hint.align === 'start') {\n                        if (startHint || this.hintLabel) {\n                            throw getMatFormFieldDuplicatedHintError('start');\n                        }\n                        startHint = hint;\n                    }\n                    else if (hint.align === 'end') {\n                        if (endHint) {\n                            throw getMatFormFieldDuplicatedHintError('end');\n                        }\n                        endHint = hint;\n                    }\n                });\n            }\n        }\n        /** Gets the default float label state. */\n        _getDefaultFloatLabelState() {\n            return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n        }\n        /**\n         * Sets the list of element IDs that describe the child control. This allows the control to update\n         * its `aria-describedby` attribute accordingly.\n         */\n        _syncDescribedByIds() {\n            if (this._control) {\n                let ids = [];\n                if (this._getDisplayedMessages() === 'hint') {\n                    const startHint = this._hintChildren ?\n                        this._hintChildren.find(hint => hint.align === 'start') : null;\n                    const endHint = this._hintChildren ?\n                        this._hintChildren.find(hint => hint.align === 'end') : null;\n                    if (startHint) {\n                        ids.push(startHint.id);\n                    }\n                    else if (this._hintLabel) {\n                        ids.push(this._hintLabelId);\n                    }\n                    if (endHint) {\n                        ids.push(endHint.id);\n                    }\n                }\n                else if (this._errorChildren) {\n                    ids = this._errorChildren.map(error => error.id);\n                }\n                this._control.setDescribedByIds(ids);\n            }\n        }\n        /** Throws an error if the form field's control is missing. */\n        _validateControlChild() {\n            if (!this._control) {\n                throw getMatFormFieldMissingControlError();\n            }\n        }\n        /**\n         * Updates the width and position of the gap in the outline. Only relevant for the outline\n         * appearance.\n         */\n        updateOutlineGap() {\n            const labelEl = this._label ? this._label.nativeElement : null;\n            if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n                !labelEl.textContent.trim()) {\n                return;\n            }\n            if (!this._platform.isBrowser) {\n                // getBoundingClientRect isn't available on the server.\n                return;\n            }\n            // If the element is not present in the DOM, the outline gap will need to be calculated\n            // the next time it is checked and in the DOM.\n            if (!this._isAttachedToDOM()) {\n                this._outlineGapCalculationNeededImmediately = true;\n                return;\n            }\n            let startWidth = 0;\n            let gapWidth = 0;\n            const container = this._connectionContainerRef.nativeElement;\n            const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n            const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n            if (this._label && this._label.nativeElement.children.length) {\n                const containerRect = container.getBoundingClientRect();\n                // If the container's width and height are zero, it means that the element is\n                // invisible and we can't calculate the outline gap. Mark the element as needing\n                // to be checked the next time the zone stabilizes. We can't do this immediately\n                // on the next change detection, because even if the element becomes visible,\n                // the `ClientRect` won't be reclaculated immediately. We reset the\n                // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n                if (containerRect.width === 0 && containerRect.height === 0) {\n                    this._outlineGapCalculationNeededOnStable = true;\n                    this._outlineGapCalculationNeededImmediately = false;\n                    return;\n                }\n                const containerStart = this._getStartEnd(containerRect);\n                const labelChildren = labelEl.children;\n                const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n                let labelWidth = 0;\n                for (let i = 0; i < labelChildren.length; i++) {\n                    labelWidth += labelChildren[i].offsetWidth;\n                }\n                startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n                gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n            }\n            for (let i = 0; i < startEls.length; i++) {\n                startEls[i].style.width = `${startWidth}px`;\n            }\n            for (let i = 0; i < gapEls.length; i++) {\n                gapEls[i].style.width = `${gapWidth}px`;\n            }\n            this._outlineGapCalculationNeededOnStable =\n                this._outlineGapCalculationNeededImmediately = false;\n        }\n        /** Gets the start end of the rect considering the current directionality. */\n        _getStartEnd(rect) {\n            return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n        }\n        /** Checks whether the form field is attached to the DOM. */\n        _isAttachedToDOM() {\n            const element = this._elementRef.nativeElement;\n            if (element.getRootNode) {\n                const rootNode = element.getRootNode();\n                // If the element is inside the DOM the root node will be either the document\n                // or the closest shadow root, otherwise it'll be the element itself.\n                return rootNode && rootNode !== element;\n            }\n            // Otherwise fall back to checking if it's in the document. This doesn't account for\n            // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n            return document.documentElement.contains(element);\n        }\n    }\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n    MatFormField.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n        { type: Platform },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ];\n    MatFormField.propDecorators = {\n        appearance: [{ type: Input }],\n        hideRequiredMarker: [{ type: Input }],\n        hintLabel: [{ type: Input }],\n        floatLabel: [{ type: Input }],\n        underlineRef: [{ type: ViewChild, args: ['underline',] }],\n        _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n        _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n        _label: [{ type: ViewChild, args: ['label',] }],\n        _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n        _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n        _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n        _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n        _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n        _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n        _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n        _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n        _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\n    return MatFormField;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatFormFieldModule = /** @class */ (() => {\n    class MatFormFieldModule {\n    }\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n    return MatFormFieldModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nlet MatTextareaAutosize = /** @class */ (() => {\n    class MatTextareaAutosize extends CdkTextareaAutosize {\n        get matAutosizeMinRows() { return this.minRows; }\n        set matAutosizeMinRows(value) { this.minRows = value; }\n        get matAutosizeMaxRows() { return this.maxRows; }\n        set matAutosizeMaxRows(value) { this.maxRows = value; }\n        get matAutosize() { return this.enabled; }\n        set matAutosize(value) { this.enabled = value; }\n        get matTextareaAutosize() { return this.enabled; }\n        set matTextareaAutosize(value) { this.enabled = value; }\n    }\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    MatTextareaAutosize.propDecorators = {\n        matAutosizeMinRows: [{ type: Input }],\n        matAutosizeMaxRows: [{ type: Input }],\n        matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n        matTextareaAutosize: [{ type: Input }]\n    };\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n    return MatTextareaAutosize;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nlet MatInput = /** @class */ (() => {\n    class MatInput extends _MatInputMixinBase {\n        constructor(_elementRef, _platform, \n        /** @docs-private */\n        ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n            super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n            this._elementRef = _elementRef;\n            this._platform = _platform;\n            this.ngControl = ngControl;\n            this._autofillMonitor = _autofillMonitor;\n            this._uid = `mat-input-${nextUniqueId++}`;\n            /**\n             * Implemented as part of MatFormFieldControl.\n             * @docs-private\n             */\n            this.focused = false;\n            /**\n             * Implemented as part of MatFormFieldControl.\n             * @docs-private\n             */\n            this.stateChanges = new Subject();\n            /**\n             * Implemented as part of MatFormFieldControl.\n             * @docs-private\n             */\n            this.controlType = 'mat-input';\n            /**\n             * Implemented as part of MatFormFieldControl.\n             * @docs-private\n             */\n            this.autofilled = false;\n            this._disabled = false;\n            this._required = false;\n            this._type = 'text';\n            this._readonly = false;\n            this._neverEmptyInputTypes = [\n                'date',\n                'datetime',\n                'datetime-local',\n                'month',\n                'time',\n                'week'\n            ].filter(t => getSupportedInputTypes().has(t));\n            const element = this._elementRef.nativeElement;\n            const nodeName = element.nodeName.toLowerCase();\n            // If no input value accessor was explicitly specified, use the element as the input value\n            // accessor.\n            this._inputValueAccessor = inputValueAccessor || element;\n            this._previousNativeValue = this.value;\n            // Force setter to be called in case id was not specified.\n            this.id = this.id;\n            // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n            // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n            // exists on iOS, we only bother to install the listener on iOS.\n            if (_platform.IOS) {\n                ngZone.runOutsideAngular(() => {\n                    _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                        let el = event.target;\n                        if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                            // `1, 1` fixes it for the first time that you type text and\n                            // then hold delete. Toggling to `1, 1` and then back to\n                            // `0, 0` seems to completely fix it.\n                            el.setSelectionRange(1, 1);\n                            el.setSelectionRange(0, 0);\n                        }\n                    });\n                });\n            }\n            this._isServer = !this._platform.isBrowser;\n            this._isNativeSelect = nodeName === 'select';\n            this._isTextarea = nodeName === 'textarea';\n            if (this._isNativeSelect) {\n                this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                    'mat-native-select';\n            }\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get disabled() {\n            if (this.ngControl && this.ngControl.disabled !== null) {\n                return this.ngControl.disabled;\n            }\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n            // Browsers may not fire the blur event if the input is disabled too quickly.\n            // Reset from here to ensure that the element doesn't become stuck.\n            if (this.focused) {\n                this.focused = false;\n                this.stateChanges.next();\n            }\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get id() { return this._id; }\n        set id(value) { this._id = value || this._uid; }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get required() { return this._required; }\n        set required(value) { this._required = coerceBooleanProperty(value); }\n        /** Input type of the element. */\n        get type() { return this._type; }\n        set type(value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n                this._elementRef.nativeElement.type = this._type;\n            }\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get value() { return this._inputValueAccessor.value; }\n        set value(value) {\n            if (value !== this.value) {\n                this._inputValueAccessor.value = value;\n                this.stateChanges.next();\n            }\n        }\n        /** Whether the element is readonly. */\n        get readonly() { return this._readonly; }\n        set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n        ngAfterViewInit() {\n            if (this._platform.isBrowser) {\n                this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                    this.autofilled = event.isAutofilled;\n                    this.stateChanges.next();\n                });\n            }\n        }\n        ngOnChanges() {\n            this.stateChanges.next();\n        }\n        ngOnDestroy() {\n            this.stateChanges.complete();\n            if (this._platform.isBrowser) {\n                this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n            }\n        }\n        ngDoCheck() {\n            if (this.ngControl) {\n                // We need to re-evaluate this on every change detection cycle, because there are some\n                // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n                // that whatever logic is in here has to be super lean or we risk destroying the performance.\n                this.updateErrorState();\n            }\n            // We need to dirty-check the native element's value, because there are some cases where\n            // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n            // updating the value using `emitEvent: false`).\n            this._dirtyCheckNativeValue();\n        }\n        /** Focuses the input. */\n        focus(options) {\n            this._elementRef.nativeElement.focus(options);\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        /** Callback for the cases where the focused state of the input changes. */\n        // tslint:disable:no-host-decorator-in-concrete\n        // tslint:enable:no-host-decorator-in-concrete\n        _focusChanged(isFocused) {\n            if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n                this.focused = isFocused;\n                this.stateChanges.next();\n            }\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        _onInput() {\n            // This is a noop function and is used to let Angular know whenever the value changes.\n            // Angular will run a new change detection each time the `input` event has been dispatched.\n            // It's necessary that Angular recognizes the value change, because when floatingLabel\n            // is set to false and Angular forms aren't used, the placeholder won't recognize the\n            // value changes and will not disappear.\n            // Listening to the input event wouldn't be necessary when the input is using the\n            // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n        }\n        /** Does some manual dirty checking on the native input `value` property. */\n        _dirtyCheckNativeValue() {\n            const newValue = this._elementRef.nativeElement.value;\n            if (this._previousNativeValue !== newValue) {\n                this._previousNativeValue = newValue;\n                this.stateChanges.next();\n            }\n        }\n        /** Make sure the input is a supported type. */\n        _validateType() {\n            if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n                throw getMatInputUnsupportedTypeError(this._type);\n            }\n        }\n        /** Checks whether the input type is one of the types that are never empty. */\n        _isNeverEmpty() {\n            return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n        }\n        /** Checks whether the input is invalid based on the native validation. */\n        _isBadInput() {\n            // The `validity` property won't be present on platform-server.\n            let validity = this._elementRef.nativeElement.validity;\n            return validity && validity.badInput;\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get empty() {\n            return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n                !this.autofilled;\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get shouldLabelFloat() {\n            if (this._isNativeSelect) {\n                // For a single-selection `<select>`, the label should float when the selected option has\n                // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n                // overlapping the label with the options.\n                const selectElement = this._elementRef.nativeElement;\n                const firstOption = selectElement.options[0];\n                // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n                // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n                return this.focused || selectElement.multiple || !this.empty ||\n                    !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n            }\n            else {\n                return this.focused || !this.empty;\n            }\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        setDescribedByIds(ids) {\n            this._ariaDescribedby = ids.join(' ');\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        onContainerClick() {\n            // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n            // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n            // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n            if (!this.focused) {\n                this.focus();\n            }\n        }\n    }\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n    MatInput.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Platform },\n        { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n        { type: NgForm, decorators: [{ type: Optional }] },\n        { type: FormGroupDirective, decorators: [{ type: Optional }] },\n        { type: ErrorStateMatcher },\n        { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n        { type: AutofillMonitor },\n        { type: NgZone }\n    ];\n    MatInput.propDecorators = {\n        disabled: [{ type: Input }],\n        id: [{ type: Input }],\n        placeholder: [{ type: Input }],\n        required: [{ type: Input }],\n        type: [{ type: Input }],\n        errorStateMatcher: [{ type: Input }],\n        value: [{ type: Input }],\n        readonly: [{ type: Input }],\n        _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n        _onInput: [{ type: HostListener, args: ['input',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\n    return MatInput;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatInputModule = /** @class */ (() => {\n    class MatInputModule {\n    }\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n    return MatInputModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  public loginFormGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.loginFormGroup = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.minLength(3)]],\n      password: [null, [Validators.required, Validators.minLength(4)]],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  public onSubmit(): void {}\n}\n","<div fxLayout=\"row\" class=\"container dig\">\n    <div fxFlex=\"65\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <p class=\"sign-in\">Sign In</p>\n        <form class=\"login-form\" [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"loginFormGroup.controls['email'] as e\">\n                <mat-label>Email</mat-label>\n                <input matInput type=\"text\" formControlName=\"email\" />\n                <mat-error *ngIf=\"e.hasError('required') && e.touched\">Email is <b>required</b></mat-error>\n                <mat-error *ngIf=\"e.hasError('minlength')\">Email is not valid.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" *ngIf=\"loginFormGroup.controls['password'] as p\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" autocomplete />\n                <mat-error *ngIf=\"p.hasError('required') && p.touched\">Password is <b>required</b></mat-error>\n                <mat-error *ngIf=\"p.hasError('minlength')\">Password should contain at least 4 characters.</mat-error>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" [disabled]=\"!loginFormGroup.valid\">\n                Log In\n            </button>\n        </form>\n        <mat-divider class=\"login-form line\"></mat-divider>\n        <p>Login with</p>\n        <div fxLayoutGap=\"1vw\">\n            <button mat-raised-button color=\"primary\">\n                Facebook\n            </button>\n            <button mat-raised-button color=\"primary\">\n                Google\n            </button>\n            <button mat-raised-button color=\"primary\">\n                Twitter\n            </button>\n        </div>\n    </div>\n    <div fxFlex class=\"right\"></div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule, //\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDividerModule,\n  ],\n})\nexport class LoginModule {}\n"]}