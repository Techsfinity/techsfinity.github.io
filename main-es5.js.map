{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/shared/services/theme/theme.service.ts","webpack:///src/shared/state/app/app.action.ts","webpack:///src/shared/state/app/app.state.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","SiteHomeModule","LoginModule","PostModule","ProfileModule","AppRoutingModule","forRoot","scrollPositionRestoration","initialNavigation","imports","AppComponent","store","iconRegistry","sanitizer","window","platformId","white","dark","isDark","svgUrl","x","bypassSecurityTrustResourceUrl","addSvgIconSetInNamespace","select","darkMode","subscribe","d","updateTheme","event","scroll","pageYOffset","dispatch","checked","onDarkMode","selector","templateUrl","styleUrls","Window","windowFactory","AppModule","provide","useFactory","withServerTransition","appId","developmentMode","production","executionStrategy","declarations","providers","bootstrap","environment","document","addEventListener","bootstrapModule","err","console","error","ThemeService","styleName","head","getElementsByTagName","themeLink","getElementById","href","style","createElement","rel","appendChild","providedIn","Document","DarkMode","enable","type","SetPost","post","AppStateModel","AppState","theme","getState","applyTheme","action","patchState","loadStyle","state","name","defaults"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./pages/site/home/home.module').then((m) => m.SiteHomeModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./pages/login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'post/:id',\n    loadChildren: () => import('./pages/site/post/post.module').then((m) => m.PostModule),\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./pages/site/profile/profile.module').then((m) => m.ProfileModule),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      initialNavigation: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { isPlatformServer } from '@angular/common';\nimport { Component, ElementRef, HostListener, Inject, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Store } from '@ngxs/store';\nimport { DarkMode } from 'src/shared/state/app/app.action';\nimport { AppState } from 'src/shared/state/app/app.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public white: boolean = false;\n  public dark: boolean = false;\n  public isDark: boolean = false;\n  private scroll: number;\n\n  @ViewChild('content', { static: true }) el: ElementRef;\n\n  @HostListener('window:scroll', ['$event'])\n  protected onScroll(event) {\n    this.updateTheme();\n  }\n\n  constructor(\n    private store: Store,\n    private iconRegistry: MatIconRegistry,\n    private sanitizer: DomSanitizer,\n    @Inject('window') private window: Window,\n    @Inject(PLATFORM_ID) protected platformId: string\n  ) {\n    let svgUrl = 'assets/svg/app.svg';\n    if (isPlatformServer(platformId)) svgUrl = `http://localhost:4200/${svgUrl}`;\n\n    const x = this.sanitizer.bypassSecurityTrustResourceUrl(svgUrl);\n    this.iconRegistry.addSvgIconSetInNamespace('app', x);\n\n    this.store.select(AppState.darkMode).subscribe((d) => {\n      this.isDark = d;\n      this.updateTheme();\n    });\n  } // constructor\n\n  private updateTheme() {\n    if (this.scroll > 0 || this.window.pageYOffset > 0) {\n      if (this.isDark) this.dark = true;\n      else this.white = true;\n    } else {\n      this.white = false;\n      this.dark = false;\n    }\n  }\n\n  public onDarkMode(event: MatSlideToggleChange) {\n    this.store.dispatch(new DarkMode(event.checked));\n  }\n} // class\n","<div [ngClass]=\"{'dark-theme': isDark }\">\n  <mat-sidenav-container>\n    <mat-sidenav>Start</mat-sidenav>\n    <mat-sidenav-content>\n\n      <!-- toolbar -->\n      <mat-toolbar class=\"toolbar\" [ngClass]=\"{'white' : white,'dark': dark }\" fxLayoutAlign=\"start center\">\n        <span fxShow.gt-xs fxHide fxFlex=\"15\"></span>\n        <button fxShow.xs fxHide mat-icon-button>\n          <mat-icon svgIcon=\"app:menu\"></mat-icon>\n        </button>\n        <a [routerLink]=\"['']\">\n          <img width=\"300\" height=\"350\" src=\"assets/img/logo.png\" class=\"logo\" />\n        </a>\n        <span fxFlex></span>\n        <div fxShow.gt-xs fxHide>\n          <button mat-button [routerLink]=\"['profile']\">Profile</button>\n          <a mat-button target=\" _blank\" href=\"https://www.facebook.com\">Contact</a>\n          <a mat-button target=\" _blank\" href=\"https://github.com/Techsfinity\">Github</a>\n          <a mat-button target=\" _blank\" href=\"https://www.linkedin.com/company/techsfinity/\">LinkedIn</a>\n          <a mat-button target=\" _blank\" href=\"#\">Blogger</a>\n\n        </div>\n        <mat-slide-toggle [checked]=\"isDark\" (change)=\"onDarkMode($event)\">\n          <mat-icon class=\"dark-mode-icon\" svgIcon=\"app:dark\"></mat-icon>\n        </mat-slide-toggle>\n        <span fxShow.gt-xs fxHide fxFlex=\"15\"></span>\n      </mat-toolbar>\n      <!-- toolbar end-->\n\n      <router-outlet></router-outlet>\n\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NoopNgxsExecutionStrategy } from '@ngxs/store';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from 'src/environments/environment';\nimport { AppState } from 'src/shared/state/app/app.state';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nexport function windowFactory() {\n  return window;\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    // Ngxs\n    NgxsModule.forRoot([AppState], {\n      developmentMode: !environment.production,\n      executionStrategy: NoopNgxsExecutionStrategy,\n    }),\n    NgxsStoragePluginModule.forRoot(),\n    MarkdownModule.forRoot(),\n    //\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatSidenavModule,\n  ],\n  providers: [{ provide: 'window', useFactory: windowFactory }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  loadStyle(styleName: string) {\n    const head = this.document.getElementsByTagName('head')[0];\n\n    let themeLink = this.document.getElementById('client-theme') as HTMLLinkElement;\n    if (themeLink) {\n      themeLink.href = styleName;\n    } else {\n      const style = this.document.createElement('link');\n      style.id = 'client-theme';\n      style.rel = 'stylesheet';\n      style.href = `${styleName}`;\n\n      head.appendChild(style);\n    }\n  } // loadStyle()\n}\n","import { Post } from 'src/shared/api/post/post';\n\nexport class DarkMode {\n  static readonly type = '[App] DarkMode';\n  constructor(public enable: boolean) {}\n}\n\nexport class SetPost {\n  static readonly type = '[App] SetPost';\n  constructor(public post: Post) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext, NgxsOnInit } from '@ngxs/store';\nimport { Post } from 'src/shared/api/post/post';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { DarkMode, SetPost } from './app.action';\n\nexport class AppStateModel {\n  darkMode: boolean;\n  post?: Post;\n}\n\n@Injectable()\n@State<AppStateModel>({\n  name: 'app',\n  defaults: { darkMode: false },\n})\nexport class AppState implements NgxsOnInit {\n  @Selector()\n  static darkMode(state: AppStateModel) {\n    return state.darkMode;\n  }\n\n  @Selector()\n  static post(state: AppStateModel) {\n    return state.post;\n  }\n\n  constructor(private theme: ThemeService) {}\n\n  ngxsOnInit({ getState }: StateContext<AppStateModel>) {\n    this.applyTheme(getState().darkMode);\n  }\n\n  @Action(DarkMode)\n  public darkMode({ patchState }: StateContext<AppStateModel>, action: DarkMode) {\n    const darkMode = action.enable;\n    this.applyTheme(darkMode);\n    return patchState({ darkMode });\n  } //darkMode()\n\n  @Action(SetPost)\n  public setPost({ patchState }: StateContext<AppStateModel>, action: SetPost) {\n    return patchState({ post: action.post });\n  }\n\n  private applyTheme(darkMode: boolean) {\n    if (darkMode) this.theme.loadStyle('okaidia.css');\n    else this.theme.loadStyle('vs.css');\n  }\n} // class\n"]}