{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./src/shared/services/theme/theme.service.ts","./src/shared/state/app/app.action.ts","./src/shared/state/app/app.state.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./pages/site/home/home.module').then((m) => m.SiteHomeModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./pages/login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'post/:id',\n    loadChildren: () => import('./pages/site/post/post.module').then((m) => m.PostModule),\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./pages/site/profile/profile.module').then((m) => m.ProfileModule),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      initialNavigation: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { isPlatformServer } from '@angular/common';\nimport { Component, ElementRef, HostListener, Inject, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Store } from '@ngxs/store';\nimport { DarkMode } from 'src/shared/state/app/app.action';\nimport { AppState } from 'src/shared/state/app/app.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public white: boolean = false;\n  public dark: boolean = false;\n  public isDark: boolean = false;\n  private scroll: number;\n\n  @ViewChild('content', { static: true }) el: ElementRef;\n\n  @HostListener('window:scroll', ['$event'])\n  protected onScroll(event) {\n    this.updateTheme();\n  }\n\n  constructor(\n    private store: Store,\n    private iconRegistry: MatIconRegistry,\n    private sanitizer: DomSanitizer,\n    @Inject('window') private window: Window,\n    @Inject(PLATFORM_ID) protected platformId: string\n  ) {\n    let svgUrl = 'assets/svg/app.svg';\n    if (isPlatformServer(platformId)) svgUrl = `http://localhost:4200/${svgUrl}`;\n\n    const x = this.sanitizer.bypassSecurityTrustResourceUrl(svgUrl);\n    this.iconRegistry.addSvgIconSetInNamespace('app', x);\n\n    this.store.select(AppState.darkMode).subscribe((d) => {\n      this.isDark = d;\n      this.updateTheme();\n    });\n  } // constructor\n\n  private updateTheme() {\n    if (this.scroll > 0 || this.window.pageYOffset > 0) {\n      if (this.isDark) this.dark = true;\n      else this.white = true;\n    } else {\n      this.white = false;\n      this.dark = false;\n    }\n  }\n\n  public onDarkMode(event: MatSlideToggleChange) {\n    this.store.dispatch(new DarkMode(event.checked));\n  }\n} // class\n","<div [ngClass]=\"{'dark-theme': isDark }\">\n  <mat-sidenav-container>\n    <mat-sidenav>Start</mat-sidenav>\n    <mat-sidenav-content>\n\n      <!-- toolbar -->\n      <mat-toolbar class=\"toolbar\" [ngClass]=\"{'white' : white,'dark': dark }\" fxLayoutAlign=\"start center\">\n        <span fxShow.gt-xs fxHide fxFlex=\"15\"></span>\n        <button fxShow.xs fxHide mat-icon-button>\n          <mat-icon svgIcon=\"app:menu\"></mat-icon>\n        </button>\n        <a [routerLink]=\"['']\">\n          <img width=\"300\" height=\"350\" src=\"assets/img/logo.png\" class=\"logo\" />\n        </a>\n        <span fxFlex></span>\n        <div fxShow.gt-xs fxHide>\n          <button mat-button [routerLink]=\"['profile']\">Profile</button>\n          <a mat-button target=\" _blank\" href=\"https://www.facebook.com\">Contact</a>\n          <a mat-button target=\" _blank\" href=\"https://github.com/Techsfinity\">Github</a>\n          <a mat-button target=\" _blank\" href=\"https://www.linkedin.com/company/techsfinity/\">LinkedIn</a>\n          <a mat-button target=\" _blank\" href=\"#\">Blogger</a>\n\n        </div>\n        <mat-slide-toggle [checked]=\"isDark\" (change)=\"onDarkMode($event)\">\n          <mat-icon class=\"dark-mode-icon\" svgIcon=\"app:dark\"></mat-icon>\n        </mat-slide-toggle>\n        <span fxShow.gt-xs fxHide fxFlex=\"15\"></span>\n      </mat-toolbar>\n      <!-- toolbar end-->\n\n      <router-outlet></router-outlet>\n\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NoopNgxsExecutionStrategy } from '@ngxs/store';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from 'src/environments/environment';\nimport { AppState } from 'src/shared/state/app/app.state';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nexport function windowFactory() {\n  return window;\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    // Ngxs\n    NgxsModule.forRoot([AppState], {\n      developmentMode: !environment.production,\n      executionStrategy: NoopNgxsExecutionStrategy,\n    }),\n    NgxsStoragePluginModule.forRoot(),\n    MarkdownModule.forRoot(),\n    //\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatSidenavModule,\n  ],\n  providers: [{ provide: 'window', useFactory: windowFactory }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  loadStyle(styleName: string) {\n    const head = this.document.getElementsByTagName('head')[0];\n\n    let themeLink = this.document.getElementById('client-theme') as HTMLLinkElement;\n    if (themeLink) {\n      themeLink.href = styleName;\n    } else {\n      const style = this.document.createElement('link');\n      style.id = 'client-theme';\n      style.rel = 'stylesheet';\n      style.href = `${styleName}`;\n\n      head.appendChild(style);\n    }\n  } // loadStyle()\n}\n","import { Post } from 'src/shared/api/post/post';\n\nexport class DarkMode {\n  static readonly type = '[App] DarkMode';\n  constructor(public enable: boolean) {}\n}\n\nexport class SetPost {\n  static readonly type = '[App] SetPost';\n  constructor(public post: Post) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext, NgxsOnInit } from '@ngxs/store';\nimport { Post } from 'src/shared/api/post/post';\nimport { ThemeService } from '../../services/theme/theme.service';\nimport { DarkMode, SetPost } from './app.action';\n\nexport class AppStateModel {\n  darkMode: boolean;\n  post?: Post;\n}\n\n@Injectable()\n@State<AppStateModel>({\n  name: 'app',\n  defaults: { darkMode: false },\n})\nexport class AppState implements NgxsOnInit {\n  @Selector()\n  static darkMode(state: AppStateModel) {\n    return state.darkMode;\n  }\n\n  @Selector()\n  static post(state: AppStateModel) {\n    return state.post;\n  }\n\n  constructor(private theme: ThemeService) {}\n\n  ngxsOnInit({ getState }: StateContext<AppStateModel>) {\n    this.applyTheme(getState().darkMode);\n  }\n\n  @Action(DarkMode)\n  public darkMode({ patchState }: StateContext<AppStateModel>, action: DarkMode) {\n    const darkMode = action.enable;\n    this.applyTheme(darkMode);\n    return patchState({ darkMode });\n  } //darkMode()\n\n  @Action(SetPost)\n  public setPost({ patchState }: StateContext<AppStateModel>, action: SetPost) {\n    return patchState({ post: action.post });\n  }\n\n  private applyTheme(darkMode: boolean) {\n    if (darkMode) this.theme.loadStyle('okaidia.css');\n    else this.theme.loadStyle('vs.css');\n  }\n} // class\n"],"sourceRoot":"webpack:///"}