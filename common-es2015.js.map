{"version":3,"sources":["./src/shared/api/post/post.ts","./src/shared/utils/all-posts.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,iCAAmB;IACnB,iCAAmB;IACnB,wCAA0B;IAC1B,iCAAmB;AACrB,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;AAED,IAAY,IAKX;AALD,WAAY,IAAI;IACd,2BAAmB;IACnB,2BAAmB;IACnB,yBAAiB;IACjB,2BAAmB;AACrB,CAAC,EALW,IAAI,KAAJ,IAAI,QAKf;AAEM,MAAM,IAAI;CAWhB;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAA0D;AAE1D,MAAM,SAAS,GAAG,aAAa,CAAC;AAChC,MAAM,QAAQ,GAAG,eAAe,CAAC;AACjC,MAAM,QAAQ,GAAsB,IAAI,GAAG,EAAE,CAAC;AAEvC,SAAS,YAAY,CAAC,GAAW;IACtC,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC;QAAE,WAAW,EAAE,CAAC;IACtC,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC;AAEM,SAAS,WAAW;IACzB,QAAQ;SACL,GAAG,CAAC,mBAAmB,EAAE;QACxB,KAAK,EAAE,mBAAmB;QAC1B,QAAQ,EAAE,yDAAU,CAAC,UAAU;QAC/B,IAAI,EAAE,mDAAI,CAAC,MAAM;QACjB,GAAG,EAAE,mBAAmB;QACxB,KAAK,EAAE,GAAG,SAAS,4CAA4C;QAC/D,WAAW,EACT,gKAAgK;KACnK,CAAC;SACD,GAAG,CAAC,mBAAmB,EAAE;QACxB,KAAK,EAAE,sBAAsB;QAC7B,QAAQ,EAAE,yDAAU,CAAC,OAAO;QAC5B,IAAI,EAAE,mDAAI,CAAC,OAAO;QAClB,KAAK,EAAE,GAAG,SAAS,4CAA4C;QAC/D,GAAG,EAAE,mBAAmB;QACxB,QAAQ,EAAE,kCAAkC;QAC5C,WAAW,EACT,qJAAqJ;KACxJ,CAAC;SACD,GAAG,CAAC,kBAAkB,EAAE;QACvB,KAAK,EAAE,kCAAkC;QACzC,QAAQ,EAAE,yDAAU,CAAC,UAAU;QAC/B,IAAI,EAAE,mDAAI,CAAC,MAAM;QACjB,KAAK,EAAE,GAAG,SAAS,2CAA2C;QAC9D,GAAG,EAAE,kBAAkB;QACvB,QAAQ,EAAE,8CAA8C;QACxD,WAAW,EAAE;;0DAEuC;KACrD,CAAC;SACD,GAAG,CAAC,aAAa,EAAE;QAClB,KAAK,EAAE,+BAA+B;QACtC,QAAQ,EAAE,yDAAU,CAAC,OAAO;QAC5B,IAAI,EAAE,mDAAI,CAAC,OAAO;QAClB,KAAK,EAAE,kDAAkD;QACzD,GAAG,EAAE,aAAa;QAClB,QAAQ,EAAE,iDAAiD;QAC3D,WAAW,EAAE,sIAAsI;KACpJ,CAAC;SACD,GAAG,CAAC,cAAc,EAAE;QACnB,KAAK,EAAE,4BAA4B;QACnC,QAAQ,EAAE,yDAAU,CAAC,OAAO;QAC5B,IAAI,EAAE,mDAAI,CAAC,OAAO;QAClB,KAAK,EAAE,uDAAuD;QAC9D,IAAI,EACF,uSAAuS;QACzS,GAAG,EAAE,cAAc;QACnB,QAAQ,EAAE,GAAG,QAAQ,iBAAiB;QACtC,MAAM,EAAE,0CAA0C;QAClD,WAAW,EACT,kKAAkK;KACrK,CAAC,CAAC;IACL,OAAO,QAAQ,CAAC;AAClB,CAAC","file":"common-es2015.js","sourcesContent":["export enum Frameworks {\n  Angular = 'Angular',\n  Flutter = 'Flutter',\n  SpringBoot = 'Spring Boot',\n  Android = 'Android',\n}\n\nexport enum Icon {\n  android = 'android',\n  flutter = 'flutter',\n  spring = 'spring',\n  angular = 'angular',\n}\n\nexport class Post {\n  public title: string;\n  public subTitle: string;\n  public image: string;\n  public url: string;\n  public markdown?: string;\n  public icon?: string;\n  public description?: string;\n  public meta?: string;\n  public github?:string;\n  public youtube?:string\n}\n","import { Frameworks, Icon, Post } from '../api/post/post';\n\nconst imageBase = 'assets/img/';\nconst postBase = 'assets/posts/';\nconst postsMap: Map<string, Post> = new Map();\n\nexport function getPostByUrl(url: string): Post {\n  if (postsMap.size == 0) getAllPosts();\n  return postsMap.get(url);\n}\n\nexport function getAllPosts() {\n  postsMap\n    .set('embedded-keycloak', {\n      title: 'Embedded Keycloak',\n      subTitle: Frameworks.SpringBoot,\n      icon: Icon.spring,\n      url: 'embedded-keycloak',\n      image: `${imageBase}/bradford-nicolas-gWfmINd9-yY-unsplash.jpg`,\n      description:\n        'You can always run keycloak on separate server. But some projects are small and you do not need to share the instance.Just run keycloak along Spring boot app.',\n    })\n    .set('androidx-security', {\n      title: 'Android app security',\n      subTitle: Frameworks.Android,\n      icon: Icon.android,\n      image: `${imageBase}/krzysztof-hepner-C1JTOq_uTpY-unsplash.jpg`,\n      url: 'androidx-security',\n      markdown: 'assets/posts/android/security.md',\n      description:\n        'Most of the applications contains sensitive user details. How can we keep them safe? AndroidX have some tips and ticks that you can use to improve.',\n    })\n    .set('spring-data-jdbc', {\n      title: 'Spring Data JDBC with Postgresql',\n      subTitle: Frameworks.SpringBoot,\n      icon: Icon.spring,\n      image: `${imageBase}/hari-nandakumar-xG8Js-uvgg4-unsplash.jpg`,\n      url: 'spring-data-jdbc',\n      markdown: 'assets/posts/spring-boot/spring-data-jdbc.md',\n      description: `Access relational database with opinionated ORM.\n      Focus on Domain Driven Design with simple and limited features.\n      Let's setup PostgreSQL database and Spring HATEAOS.`,\n    })\n    .set('android-tdd', {\n      title: 'Test Driven Development (TDD)',\n      subTitle: Frameworks.Android,\n      icon: Icon.android,\n      image: 'assets/img/robert-tudor-UZCKUqHzaps-unsplash.jpg',\n      url: 'android-tdd',\n      markdown: 'assets/posts/android/test-driven-development.md',\n      description: `With the release of Hilt dependency inject we will try to implement an architecture for Android applications withc is more testable.`,\n    })\n    .set('angular-ngxs', {\n      title: 'State management with NGXS',\n      subTitle: Frameworks.Angular,\n      icon: Icon.angular,\n      image: 'assets/img/max-ostrozhinskiy-18wn7B2y-SU-unsplash.jpg',\n      meta:\n        '<span>Photo by <a href=\"https://unsplash.com/@maxon?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Max Ostrozhinskiy</a> on <a href=\"https://unsplash.com/s/photos/state?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>',\n      url: 'angular-ngxs',\n      markdown: `${postBase}angular/ngxs.md`,\n      github: 'https://github.com/hrandika/ngxs-smaples',\n      description:\n        'Very simple state management for Angular. Yes there is Ngrx but Ngxs seems easy and simple.There are plugins to help with things like storage,dev tolls and more',\n    });\n  return postsMap;\n}\n"],"sourceRoot":"webpack:///"}