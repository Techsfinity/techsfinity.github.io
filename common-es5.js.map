{"version":3,"sources":["webpack:///src/shared/api/post/post.ts","webpack:///src/shared/utils/all-posts.ts"],"names":["Frameworks","Icon","Post","imageBase","postBase","postsMap","Map","getPostByUrl","url","size","getAllPosts","get","set","title","subTitle","SpringBoot","icon","spring","image","description","Android","android","markdown","Angular","angular","meta","github"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYA,UAAZ;;AAAA,eAAYA,UAAZ,EAAsB;AACpB;AACA;AACA;AACA;AACD,KALD,EAAYA,UAAU,KAAVA,UAAU,MAAtB;;AAOA,QAAYC,IAAZ;;AAAA,eAAYA,IAAZ,EAAgB;AACd;AACA;AACA;AACA;AACD,KALD,EAAYA,IAAI,KAAJA,IAAI,MAAhB;;QAOaC,I;;;;;;;;;;;;;;;;;;;ACdb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,QAAMC,SAAS,GAAG,aAAlB;AACA,QAAMC,QAAQ,GAAG,eAAjB;AACA,QAAMC,QAAQ,GAAsB,IAAIC,GAAJ,EAApC;;AAEO,aAASC,YAAT,CAAsBC,GAAtB,EAAiC;AACtC,UAAIH,QAAQ,CAACI,IAAT,IAAiB,CAArB,EAAwBC,WAAW;AACnC,aAAOL,QAAQ,CAACM,GAAT,CAAaH,GAAb,CAAP;AACD;;AAEM,aAASE,WAAT,GAAuB;AAC5BL,cAAQ,CACLO,GADH,CACO,mBADP,EAC4B;AACxBC,aAAK,EAAE,mBADiB;AAExBC,gBAAQ,EAAE,0DAAWC,UAFG;AAGxBC,YAAI,EAAE,oDAAKC,MAHa;AAIxBT,WAAG,EAAE,mBAJmB;AAKxBU,aAAK,YAAKf,SAAL,+CALmB;AAMxBgB,mBAAW,EACT;AAPsB,OAD5B,EAUGP,GAVH,CAUO,mBAVP,EAU4B;AACxBC,aAAK,EAAE,sBADiB;AAExBC,gBAAQ,EAAE,0DAAWM,OAFG;AAGxBJ,YAAI,EAAE,oDAAKK,OAHa;AAIxBH,aAAK,YAAKf,SAAL,+CAJmB;AAKxBK,WAAG,EAAE,mBALmB;AAMxBc,gBAAQ,EAAE,kCANc;AAOxBH,mBAAW,EACT;AARsB,OAV5B,EAoBGP,GApBH,CAoBO,kBApBP,EAoB2B;AACvBC,aAAK,EAAE,kCADgB;AAEvBC,gBAAQ,EAAE,0DAAWC,UAFE;AAGvBC,YAAI,EAAE,oDAAKC,MAHY;AAIvBC,aAAK,YAAKf,SAAL,8CAJkB;AAKvBK,WAAG,EAAE,kBALkB;AAMvBc,gBAAQ,EAAE,8CANa;AAOvBH,mBAAW;AAPY,OApB3B,EA+BGP,GA/BH,CA+BO,aA/BP,EA+BsB;AAClBC,aAAK,EAAE,+BADW;AAElBC,gBAAQ,EAAE,0DAAWM,OAFH;AAGlBJ,YAAI,EAAE,oDAAKK,OAHO;AAIlBH,aAAK,EAAE,kDAJW;AAKlBV,WAAG,EAAE,aALa;AAMlBc,gBAAQ,EAAE,iDANQ;AAOlBH,mBAAW;AAPO,OA/BtB,EAwCGP,GAxCH,CAwCO,cAxCP,EAwCuB;AACnBC,aAAK,EAAE,4BADY;AAEnBC,gBAAQ,EAAE,0DAAWS,OAFF;AAGnBP,YAAI,EAAE,oDAAKQ,OAHQ;AAInBN,aAAK,EAAE,uDAJY;AAKnBO,YAAI,EACF,uSANiB;AAOnBjB,WAAG,EAAE,cAPc;AAQnBc,gBAAQ,YAAKlB,QAAL,oBARW;AASnBsB,cAAM,EAAE,0CATW;AAUnBP,mBAAW,EACT;AAXiB,OAxCvB;AAqDA,aAAOd,QAAP;AACD","file":"common-es5.js","sourcesContent":["export enum Frameworks {\n  Angular = 'Angular',\n  Flutter = 'Flutter',\n  SpringBoot = 'Spring Boot',\n  Android = 'Android',\n}\n\nexport enum Icon {\n  android = 'android',\n  flutter = 'flutter',\n  spring = 'spring',\n  angular = 'angular',\n}\n\nexport class Post {\n  public title: string;\n  public subTitle: string;\n  public image: string;\n  public url: string;\n  public markdown?: string;\n  public icon?: string;\n  public description?: string;\n  public meta?: string;\n  public github?:string;\n  public youtube?:string\n}\n","import { Frameworks, Icon, Post } from '../api/post/post';\n\nconst imageBase = 'assets/img/';\nconst postBase = 'assets/posts/';\nconst postsMap: Map<string, Post> = new Map();\n\nexport function getPostByUrl(url: string): Post {\n  if (postsMap.size == 0) getAllPosts();\n  return postsMap.get(url);\n}\n\nexport function getAllPosts() {\n  postsMap\n    .set('embedded-keycloak', {\n      title: 'Embedded Keycloak',\n      subTitle: Frameworks.SpringBoot,\n      icon: Icon.spring,\n      url: 'embedded-keycloak',\n      image: `${imageBase}/bradford-nicolas-gWfmINd9-yY-unsplash.jpg`,\n      description:\n        'You can always run keycloak on separate server. But some projects are small and you do not need to share the instance.Just run keycloak along Spring boot app.',\n    })\n    .set('androidx-security', {\n      title: 'Android app security',\n      subTitle: Frameworks.Android,\n      icon: Icon.android,\n      image: `${imageBase}/krzysztof-hepner-C1JTOq_uTpY-unsplash.jpg`,\n      url: 'androidx-security',\n      markdown: 'assets/posts/android/security.md',\n      description:\n        'Most of the applications contains sensitive user details. How can we keep them safe? AndroidX have some tips and ticks that you can use to improve.',\n    })\n    .set('spring-data-jdbc', {\n      title: 'Spring Data JDBC with Postgresql',\n      subTitle: Frameworks.SpringBoot,\n      icon: Icon.spring,\n      image: `${imageBase}/hari-nandakumar-xG8Js-uvgg4-unsplash.jpg`,\n      url: 'spring-data-jdbc',\n      markdown: 'assets/posts/spring-boot/spring-data-jdbc.md',\n      description: `Access relational database with opinionated ORM.\n      Focus on Domain Driven Design with simple and limited features.\n      Let's setup PostgreSQL database and Spring HATEAOS.`,\n    })\n    .set('android-tdd', {\n      title: 'Test Driven Development (TDD)',\n      subTitle: Frameworks.Android,\n      icon: Icon.android,\n      image: 'assets/img/robert-tudor-UZCKUqHzaps-unsplash.jpg',\n      url: 'android-tdd',\n      markdown: 'assets/posts/android/test-driven-development.md',\n      description: `With the release of Hilt dependency inject we will try to implement an architecture for Android applications withc is more testable.`,\n    })\n    .set('angular-ngxs', {\n      title: 'State management with NGXS',\n      subTitle: Frameworks.Angular,\n      icon: Icon.angular,\n      image: 'assets/img/max-ostrozhinskiy-18wn7B2y-SU-unsplash.jpg',\n      meta:\n        '<span>Photo by <a href=\"https://unsplash.com/@maxon?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Max Ostrozhinskiy</a> on <a href=\"https://unsplash.com/s/photos/state?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>',\n      url: 'angular-ngxs',\n      markdown: `${postBase}angular/ngxs.md`,\n      github: 'https://github.com/hrandika/ngxs-smaples',\n      description:\n        'Very simple state management for Angular. Yes there is Ngrx but Ngxs seems easy and simple.There are plugins to help with things like storage,dev tolls and more',\n    });\n  return postsMap;\n}\n"]}